#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  Generate xcov report
summary: |
  Allows generating the code coverage report with the xcov gem
description: |
  This step will process your test results files and generate the coverage report. It will expose this report through the environment variable so it can be processed further.
website: https://github.com/lawicko/bitrise-step-xcov
source_code_url: https://github.com/lawicko/bitrise-step-xcov
support_url: https://github.com/lawicko/bitrise-step-xcov/issues
host_os_tags:
  - osx-10.10
  - ubuntu-16.04

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
project_type_tags:
  - ios
  - macos

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - utility

is_requires_admin_user: true
is_always_run: false
is_skippable: false
run_if: ""

toolkit:
  bash:
    entry_file: step.sh

inputs:
  - xcresult_file_path: $BITRISE_XCRESULT_PATH
    opts:
      title: "xcresult file path"
      summary: "The path where the xcresult file is located"
      description: |
        "The path where the xcresult file is located. Normally this comes from another step that runs the tests, for example Xcode Test for iOS. The default is $BITRISE_XCRESULT_PATH, which is the output of the mentioned test step, so this step should work with it out of the box."
      is_expand: true
      is_required: true
  - report_path: "${BITRISE_DEPLOY_DIR}/xcov_reports"
    opts:
      title: "The location where the report will be saved"
      summary: "The location where the report will be saved"
      description: |-
        This is where the report will be saved. The default is $BITRISE_DEPLOY_DIR/xcov_reports.
      is_required: true
#  - xcov_version:
#    opts:
#      title: "xcov version"
#      summary: "xcov version to use"
#      description: |
#        "This can be useful in case xcov starts misbehaving in the latest release, then you can choose earlier version. If nothing is provided, the latest version will be used."
#      is_expand: true
#      is_required: false
outputs:
  - XCOV_REPORT_PATH:
    opts:
      title: "xcov report path"
      summary: "The path to the generated xcov report (by default, it is created by concatenating the `report_path` you provide as one of the inputs to this step and the report file name. The file name depends on the reporter that was selected. This is useful if you want to have this report in a separate file and do something with it, for example upload to S3."
      description: |-
        The path to the generated xcov report (by default, it is created by concatenating the `report_path` you provide as one of the inputs to this step and the report file name. The file name depends on the reporter that was selected. This is useful if you want to have this report in a separate file and do something with it, for example upload to S3.
